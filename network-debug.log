Deleting cluster "kind" ...
Creating cluster "kind" ...
 ‚Ä¢ Ensuring node image (kindest/node:v1.25.2) üñº  ...
 ‚úì Ensuring node image (kindest/node:v1.25.2) üñº
 ‚Ä¢ Preparing nodes üì¶   ...
 ‚úì Preparing nodes üì¶ 
 ‚Ä¢ Writing configuration üìú  ...
 ‚úì Writing configuration üìú
 ‚Ä¢ Starting control-plane üïπÔ∏è  ...
 ‚úì Starting control-plane üïπÔ∏è
 ‚Ä¢ Installing CNI üîå  ...
 ‚úì Installing CNI üîå
 ‚Ä¢ Installing StorageClass üíæ  ...
 ‚úì Installing StorageClass üíæ
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community üôÇ
net.ipv4.conf.all.route_localnet = 1
ed920c9841aa8748ea0f1921b341027183ad34d7f5635d5d85dca8296895fdca
configmap/local-registry-hosting created
==============================================
namespace/ingress-nginx created
serviceaccount/ingress-nginx created
serviceaccount/ingress-nginx-admission created
role.rbac.authorization.k8s.io/ingress-nginx created
role.rbac.authorization.k8s.io/ingress-nginx-admission created
clusterrole.rbac.authorization.k8s.io/ingress-nginx created
clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created
rolebinding.rbac.authorization.k8s.io/ingress-nginx created
rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created
clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
configmap/ingress-nginx-controller created
service/ingress-nginx-controller created
service/ingress-nginx-controller-admission created
deployment.apps/ingress-nginx-controller created
job.batch/ingress-nginx-admission-create created
job.batch/ingress-nginx-admission-patch created
ingressclass.networking.k8s.io/nginx created
validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io created
namespace/cert-manager created
serviceaccount/cert-manager-cainjector created
serviceaccount/cert-manager created
serviceaccount/cert-manager-webhook created
clusterrole.rbac.authorization.k8s.io/cert-manager-cainjector created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-issuers created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-clusterissuers created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-certificates created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-orders created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-challenges created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-ingress-shim created
clusterrole.rbac.authorization.k8s.io/cert-manager-view created
clusterrole.rbac.authorization.k8s.io/cert-manager-edit created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-approve:cert-manager-io created
clusterrole.rbac.authorization.k8s.io/cert-manager-controller-certificatesigningrequests created
clusterrole.rbac.authorization.k8s.io/cert-manager-webhook:subjectaccessreviews created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-cainjector created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-issuers created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-clusterissuers created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-certificates created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-orders created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-challenges created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-ingress-shim created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-approve:cert-manager-io created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-controller-certificatesigningrequests created
clusterrolebinding.rbac.authorization.k8s.io/cert-manager-webhook:subjectaccessreviews created
role.rbac.authorization.k8s.io/cert-manager-cainjector:leaderelection created
role.rbac.authorization.k8s.io/cert-manager:leaderelection created
role.rbac.authorization.k8s.io/cert-manager-webhook:dynamic-serving created
rolebinding.rbac.authorization.k8s.io/cert-manager-cainjector:leaderelection created
rolebinding.rbac.authorization.k8s.io/cert-manager:leaderelection created
rolebinding.rbac.authorization.k8s.io/cert-manager-webhook:dynamic-serving created
service/cert-manager created
service/cert-manager-webhook created
deployment.apps/cert-manager-cainjector created
deployment.apps/cert-manager created
deployment.apps/cert-manager-webhook created
mutatingwebhookconfiguration.admissionregistration.k8s.io/cert-manager-webhook created
validatingwebhookconfiguration.admissionregistration.k8s.io/cert-manager-webhook created
Waiting for deployment spec update to be observed...
Waiting for deployment spec update to be observed...
Waiting for deployment "cert-manager" rollout to finish: 0 out of 1 new replicas have been updated...
Waiting for deployment "cert-manager" rollout to finish: 0 of 1 updated replicas are available...
deployment "cert-manager" successfully rolled out
Waiting for deployment "cert-manager-cainjector" rollout to finish: 0 of 1 updated replicas are available...
deployment "cert-manager-cainjector" successfully rolled out
Waiting for deployment "cert-manager-webhook" rollout to finish: 0 of 1 updated replicas are available...
deployment "cert-manager-webhook" successfully rolled out
pod/ingress-nginx-controller-85bc78845d-pxtm2 condition met
==============================================
namespace/test-network created
persistentvolumeclaim/fabric-org0 created
persistentvolumeclaim/fabric-org1 created
persistentvolumeclaim/fabric-org2 created
persistentvolumeclaim/fabric-org3 created
Error from server (NotFound): configmaps "org0-config" not found
Error from server (NotFound): configmaps "org1-config" not found
Error from server (NotFound): configmaps "org2-config" not found
Error from server (NotFound): configmaps "org3-config" not found
configmap/org0-config created
configmap/org1-config created
configmap/org2-config created
configmap/org3-config created
issuer.cert-manager.io/root-tls-cert-issuer created
issuer.cert-manager.io/root-tls-cert-issuer condition met
issuer.cert-manager.io/root-tls-cert-issuer unchanged
issuer.cert-manager.io/root-tls-cert-issuer condition met
issuer.cert-manager.io/root-tls-cert-issuer unchanged
issuer.cert-manager.io/root-tls-cert-issuer condition met
issuer.cert-manager.io/root-tls-cert-issuer unchanged
issuer.cert-manager.io/root-tls-cert-issuer condition met
certificate.cert-manager.io/org0-tls-cert-issuer created
issuer.cert-manager.io/org0-tls-cert-issuer created
certificate.cert-manager.io/org1-tls-cert-issuer created
issuer.cert-manager.io/org1-tls-cert-issuer created
certificate.cert-manager.io/org2-tls-cert-issuer created
issuer.cert-manager.io/org2-tls-cert-issuer created
certificate.cert-manager.io/org3-tls-cert-issuer created
issuer.cert-manager.io/org3-tls-cert-issuer created
issuer.cert-manager.io/org0-tls-cert-issuer condition met
issuer.cert-manager.io/org1-tls-cert-issuer condition met
issuer.cert-manager.io/org2-tls-cert-issuer condition met
issuer.cert-manager.io/org3-tls-cert-issuer condition met
Applying template kube/org0/org0-ca.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org0-ca-tls-cert
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org0-ca
    - org0-ca.test-network.svc.cluster.local
    - org0-ca.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org0-ca-tls-cert
  issuerRef:
    name: org0-tls-cert-issuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org0-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org0-ca
  template:
    metadata:
      labels:
        app: org0-ca
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-ca:1.5
          imagePullPolicy: IfNotPresent
          env:
            - name: FABRIC_CA_SERVER_CA_NAME
              value: "org0-ca"
            - name: FABRIC_CA_SERVER_DEBUG
              value: "false"
            - name: FABRIC_CA_SERVER_HOME
              value: "/var/hyperledger/fabric-ca-server"
            - name: FABRIC_CA_SERVER_TLS_CERTFILE
              value: "/var/hyperledger/fabric/config/tls/tls.crt"
            - name: FABRIC_CA_SERVER_TLS_KEYFILE
              value: "/var/hyperledger/fabric/config/tls/tls.key"
            - name: FABRIC_CA_CLIENT_HOME
              value: "/var/hyperledger/fabric-ca-client"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
              subPath: fabric-ca-server-config.yaml
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 2
            periodSeconds: 5
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org0
        - name: fabric-config
          configMap:
            name: org0-config
        - name: tls-cert-volume
          secret:
            secretName: org0-ca-tls-cert

---
apiVersion: v1
kind: Service
metadata:
  name: org0-ca
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
  selector:
    app: org0-ca

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org0-ca
  name: org0-ca
spec:
  ingressClassName: nginx
  rules:
    - host: org0-ca.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-ca
                port:
                  name: https
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
      - org0-ca.localho.st
certificate.cert-manager.io/org0-ca-tls-cert created
deployment.apps/org0-ca created
service/org0-ca created
ingress.networking.k8s.io/org0-ca created
Applying template kube/org1/org1-ca.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org1-ca-tls-cert
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org1-ca
    - org1-ca.test-network.svc.cluster.local
    - org1-ca.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org1-ca-tls-cert
  issuerRef:
    name: org1-tls-cert-issuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org1-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org1-ca
  template:
    metadata:
      labels:
        app: org1-ca
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-ca:1.5
          imagePullPolicy: IfNotPresent
          env:
            - name: FABRIC_CA_SERVER_CA_NAME
              value: "org1-ca"
            - name: FABRIC_CA_SERVER_DEBUG
              value: "false"
            - name: FABRIC_CA_SERVER_HOME
              value: "/var/hyperledger/fabric-ca-server"
            - name: FABRIC_CA_SERVER_TLS_CERTFILE
              value: "/var/hyperledger/fabric/config/tls/tls.crt"
            - name: FABRIC_CA_SERVER_TLS_KEYFILE
              value: "/var/hyperledger/fabric/config/tls/tls.key"
            - name: FABRIC_CA_CLIENT_HOME
              value: "/var/hyperledger/fabric-ca-client"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
              subPath: fabric-ca-server-config.yaml
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 2
            periodSeconds: 5
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org1
        - name: fabric-config
          configMap:
            name: org1-config
        - name: tls-cert-volume
          secret:
            secretName: org1-ca-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org1-ca
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
  selector:
    app: org1-ca
    
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org1-ca
  name: org1-ca
spec:
  ingressClassName: nginx
  rules:
    - host: org1-ca.localho.st
      http:
        paths:
          - backend:
              service:
                name: org1-ca
                port:
                  name: https
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org1-ca.localho.st
  certificate.cert-manager.io/org1-ca-tls-cert created
deployment.apps/org1-ca created
service/org1-ca created
ingress.networking.k8s.io/org1-ca created
Applying template kube/org2/org2-ca.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org2-ca-tls-cert
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org2-ca
    - org2-ca.test-network.svc.cluster.local
    - org2-ca.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org2-ca-tls-cert
  issuerRef:
    name: org2-tls-cert-issuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org2-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org2-ca
  template:
    metadata:
      labels:
        app: org2-ca
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-ca:1.5
          imagePullPolicy: IfNotPresent
          env:
            - name: FABRIC_CA_SERVER_CA_NAME
              value: "org2-ca"
            - name: FABRIC_CA_SERVER_DEBUG
              value: "false"
            - name: FABRIC_CA_SERVER_HOME
              value: "/var/hyperledger/fabric-ca-server"
            - name: FABRIC_CA_SERVER_TLS_CERTFILE
              value: "/var/hyperledger/fabric/config/tls/tls.crt"
            - name: FABRIC_CA_SERVER_TLS_KEYFILE
              value: "/var/hyperledger/fabric/config/tls/tls.key"
            - name: FABRIC_CA_CLIENT_HOME
              value: "/var/hyperledger/fabric-ca-client"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
              subPath: fabric-ca-server-config.yaml
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 2
            periodSeconds: 5
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org2
        - name: fabric-config
          configMap:
            name: org2-config
        - name: tls-cert-volume
          secret:
            secretName: org2-ca-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org2-ca
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
  selector:
    app: org2-ca
    
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org2-ca
  name: org2-ca
spec:
  ingressClassName: nginx
  rules:
    - host: org2-ca.localho.st
      http:
        paths:
          - backend:
              service:
                name: org2-ca
                port:
                  name: https
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org2-ca.localho.st
    certificate.cert-manager.io/org2-ca-tls-cert created
deployment.apps/org2-ca created
service/org2-ca created
ingress.networking.k8s.io/org2-ca created
Applying template kube/org3/org3-ca.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org3-ca-tls-cert
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org3-ca
    - org3-ca.test-network.svc.cluster.local
    - org3-ca.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org3-ca-tls-cert
  issuerRef:
    name: org3-tls-cert-issuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org3-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org3-ca
  template:
    metadata:
      labels:
        app: org3-ca
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-ca:1.5
          imagePullPolicy: IfNotPresent
          env:
            - name: FABRIC_CA_SERVER_CA_NAME
              value: "org3-ca"
            - name: FABRIC_CA_SERVER_DEBUG
              value: "false"
            - name: FABRIC_CA_SERVER_HOME
              value: "/var/hyperledger/fabric-ca-server"
            - name: FABRIC_CA_SERVER_TLS_CERTFILE
              value: "/var/hyperledger/fabric/config/tls/tls.crt"
            - name: FABRIC_CA_SERVER_TLS_KEYFILE
              value: "/var/hyperledger/fabric/config/tls/tls.key"
            - name: FABRIC_CA_CLIENT_HOME
              value: "/var/hyperledger/fabric-ca-client"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
              subPath: fabric-ca-server-config.yaml
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 2
            periodSeconds: 5
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org3
        - name: fabric-config
          configMap:
            name: org3-config
        - name: tls-cert-volume
          secret:
            secretName: org3-ca-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org3-ca
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
  selector:
    app: org3-ca

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org3-ca
  name: org3-ca
spec:
  ingressClassName: nginx
  rules:
    - host: org3-ca.localho.st
      http:
        paths:
          - backend:
              service:
                name: org3-ca
                port:
                  name: https
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org3-ca.localho.st
certificate.cert-manager.io/org3-ca-tls-cert created
deployment.apps/org3-ca created
service/org3-ca created
ingress.networking.k8s.io/org3-ca created
Waiting for deployment "org0-ca" rollout to finish: 0 of 1 updated replicas are available...
deployment "org0-ca" successfully rolled out
deployment "org1-ca" successfully rolled out
deployment "org2-ca" successfully rolled out
Waiting for deployment "org3-ca" rollout to finish: 0 of 1 updated replicas are available...
deployment "org3-ca" successfully rolled out
retrieving org0-ca TLS root cert
2022/10/26 14:17:50 [INFO] TLS Enabled
2022/10/26 14:17:50 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:17:50 [INFO] encoded CSR
2022/10/26 14:17:51 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/rcaadmin/msp/signcerts/cert.pem
2022/10/26 14:17:51 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/rcaadmin/msp/cacerts/org0-ca-localho-st-443.pem
2022/10/26 14:17:51 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/rcaadmin/msp/IssuerPublicKey
2022/10/26 14:17:51 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/rcaadmin/msp/IssuerRevocationPublicKey
retrieving org1-ca TLS root cert
2022/10/26 14:17:51 [INFO] TLS Enabled
2022/10/26 14:17:51 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:17:51 [INFO] encoded CSR
2022/10/26 14:17:51 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/rcaadmin/msp/signcerts/cert.pem
2022/10/26 14:17:51 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/rcaadmin/msp/cacerts/org1-ca-localho-st-443.pem
2022/10/26 14:17:51 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/rcaadmin/msp/IssuerPublicKey
2022/10/26 14:17:51 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/rcaadmin/msp/IssuerRevocationPublicKey
retrieving org2-ca TLS root cert
2022/10/26 14:17:51 [INFO] TLS Enabled
2022/10/26 14:17:51 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:17:51 [INFO] encoded CSR
2022/10/26 14:17:51 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/rcaadmin/msp/signcerts/cert.pem
2022/10/26 14:17:51 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/rcaadmin/msp/cacerts/org2-ca-localho-st-443.pem
2022/10/26 14:17:51 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/rcaadmin/msp/IssuerPublicKey
2022/10/26 14:17:51 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/rcaadmin/msp/IssuerRevocationPublicKey
retrieving org3-ca TLS root cert
2022/10/26 14:17:51 [INFO] TLS Enabled
2022/10/26 14:17:51 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:17:51 [INFO] encoded CSR
2022/10/26 14:17:51 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/rcaadmin/msp/signcerts/cert.pem
2022/10/26 14:17:51 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/rcaadmin/msp/cacerts/org3-ca-localho-st-443.pem
2022/10/26 14:17:51 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/rcaadmin/msp/IssuerPublicKey
2022/10/26 14:17:51 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/rcaadmin/msp/IssuerRevocationPublicKey
2022/10/26 14:17:51 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:51 [INFO] TLS Enabled
2022/10/26 14:17:51 [INFO] TLS Enabled
Password: ordererpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org0-orderer1:ordererpw@org0-ca --csr.hosts org0-orderer1 --mspdir /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp
2022/10/26 11:17:52 [INFO] Created a default configuration file at /var/hyperledger/fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 11:17:52 [INFO] TLS Enabled
2022/10/26 11:17:52 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:52 [INFO] encoded CSR
2022/10/26 11:17:52 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:52 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp/cacerts/org0-ca.pem
2022/10/26 11:17:52 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp/IssuerPublicKey
2022/10/26 11:17:52 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:52 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:52 [INFO] TLS Enabled
2022/10/26 14:17:52 [INFO] TLS Enabled
Password: ordererpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org0-orderer2:ordererpw@org0-ca --csr.hosts org0-orderer2 --mspdir /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp
2022/10/26 11:17:52 [INFO] TLS Enabled
2022/10/26 11:17:52 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:52 [INFO] encoded CSR
2022/10/26 11:17:52 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:52 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp/cacerts/org0-ca.pem
2022/10/26 11:17:52 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp/IssuerPublicKey
2022/10/26 11:17:52 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:52 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:52 [INFO] TLS Enabled
2022/10/26 14:17:52 [INFO] TLS Enabled
Password: ordererpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org0-orderer3:ordererpw@org0-ca --csr.hosts org0-orderer3 --mspdir /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp
2022/10/26 11:17:52 [INFO] TLS Enabled
2022/10/26 11:17:52 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:52 [INFO] encoded CSR
2022/10/26 11:17:52 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:52 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp/cacerts/org0-ca.pem
2022/10/26 11:17:52 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp/IssuerPublicKey
2022/10/26 11:17:52 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org0-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:53 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:53 [INFO] TLS Enabled
2022/10/26 14:17:53 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org1-peer1:peerpw@org1-ca --csr.hosts localhost,org1-peer1,org1-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp
2022/10/26 11:17:53 [INFO] Created a default configuration file at /var/hyperledger/fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 11:17:53 [INFO] TLS Enabled
2022/10/26 11:17:53 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:53 [INFO] encoded CSR
2022/10/26 11:17:53 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:53 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp/cacerts/org1-ca.pem
2022/10/26 11:17:53 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp/IssuerPublicKey
2022/10/26 11:17:53 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:53 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:53 [INFO] TLS Enabled
2022/10/26 14:17:53 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org1-peer2:peerpw@org1-ca --csr.hosts localhost,org1-peer2,org1-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp
2022/10/26 11:17:53 [INFO] TLS Enabled
2022/10/26 11:17:53 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:53 [INFO] encoded CSR
2022/10/26 11:17:53 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:53 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp/cacerts/org1-ca.pem
2022/10/26 11:17:53 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp/IssuerPublicKey
2022/10/26 11:17:53 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org1-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:53 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:53 [INFO] TLS Enabled
2022/10/26 14:17:53 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org2-peer1:peerpw@org2-ca --csr.hosts localhost,org2-peer1,org2-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp
2022/10/26 11:17:54 [INFO] Created a default configuration file at /var/hyperledger/fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 11:17:54 [INFO] TLS Enabled
2022/10/26 11:17:54 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:54 [INFO] encoded CSR
2022/10/26 11:17:54 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:54 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp/cacerts/org2-ca.pem
2022/10/26 11:17:54 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp/IssuerPublicKey
2022/10/26 11:17:54 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:54 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:54 [INFO] TLS Enabled
2022/10/26 14:17:54 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org2-peer2:peerpw@org2-ca --csr.hosts localhost,org2-peer2,org2-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp
2022/10/26 11:17:54 [INFO] TLS Enabled
2022/10/26 11:17:54 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:54 [INFO] encoded CSR
2022/10/26 11:17:54 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:54 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp/cacerts/org2-ca.pem
2022/10/26 11:17:54 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp/IssuerPublicKey
2022/10/26 11:17:54 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org2-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:54 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:54 [INFO] TLS Enabled
2022/10/26 14:17:54 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org3-peer1:peerpw@org3-ca --csr.hosts localhost,org3-peer1,org3-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp
2022/10/26 11:17:54 [INFO] Created a default configuration file at /var/hyperledger/fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 11:17:54 [INFO] TLS Enabled
2022/10/26 11:17:54 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:54 [INFO] encoded CSR
2022/10/26 11:17:55 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:55 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp/cacerts/org3-ca.pem
2022/10/26 11:17:55 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp/IssuerPublicKey
2022/10/26 11:17:55 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: orderer'
2022/10/26 14:17:55 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:17:55 [INFO] TLS Enabled
2022/10/26 14:17:55 [INFO] TLS Enabled
Password: peerpw
+ export 'FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client'
+ export 'FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt'
+ fabric-ca-client enroll --url https://org3-peer2:peerpw@org3-ca --csr.hosts localhost,org3-peer2,org3-peer-gateway-svc --mspdir /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp
2022/10/26 11:17:55 [INFO] TLS Enabled
2022/10/26 11:17:55 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 11:17:55 [INFO] encoded CSR
2022/10/26 11:17:55 [INFO] Stored client certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp/signcerts/cert.pem
2022/10/26 11:17:55 [INFO] Stored root CA certificate at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp/cacerts/org3-ca.pem
2022/10/26 11:17:55 [INFO] Stored Issuer public key at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp/IssuerPublicKey
2022/10/26 11:17:55 [INFO] Stored Issuer revocation public key at /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp/IssuerRevocationPublicKey
+ echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org3-ca.pem
      OrganizationalUnitIdentifier: orderer'
Applying template kube/org0/org0-orderer1.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org0-orderer1-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org0-orderer1
    - org0-orderer1.test-network.svc.cluster.local
    - org0-orderer1.localho.st
    - org0-orderer1-admin.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org0-orderer1-tls-cert
  issuerRef:
    name: org0-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org0-orderer1-env
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: INFO # debug:cauthdsl,policies,msp,common.configtx,common.channelconfig=info
  ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
  ORDERER_GENERAL_LISTENPORT: "6050"
  ORDERER_GENERAL_LOCALMSPID: OrdererMSP
  ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp
  ORDERER_GENERAL_TLS_ENABLED: "true"
  ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_GENERAL_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  ORDERER_GENERAL_BOOTSTRAPMETHOD: none
  ORDERER_ADMIN_TLS_ENABLED: "true"
  ORDERER_ADMIN_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_ADMIN_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_ADMIN_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  # Authenticate client connections with the org's ecert / admin user enrollments
  ORDERER_ADMIN_TLS_CLIENTROOTCAS: "[/var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer1.org0.example.com/msp/cacerts/org0-ca.pem]"
  ORDERER_FILELEDGER_LOCATION: /var/hyperledger/fabric/data/orderer1
  ORDERER_CONSENSUS_WALDIR: /var/hyperledger/fabric/data/orderer1/etcdraft/wal
  ORDERER_CONSENSUS_SNAPDIR: /var/hyperledger/fabric/data/orderer1/etcdraft/wal
  ORDERER_OPERATIONS_LISTENADDRESS: 0.0.0.0:8443
  ORDERER_ADMIN_LISTENADDRESS: 0.0.0.0:9443

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org0-orderer1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org0-orderer1
  template:
    metadata:
      labels:
        app: org0-orderer1
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-orderer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org0-orderer1-env
          ports:
            - containerPort: 6050
            - containerPort: 8443
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org0
        - name: fabric-config
          configMap:
            name: org0-config
        - name: tls-cert-volume
          secret:
            secretName: org0-orderer1-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org0-orderer1
spec:
  ports:
    - name: general
      port: 6050
      protocol: TCP
    - name: operations
      port: 8443
      protocol: TCP
    - name: admin
      port: 9443
      protocol: TCP
  selector:
    app: org0-orderer1

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org0-orderer1
  name: org0-orderer1
spec:
  ingressClassName: nginx
  rules:
    - host: org0-orderer1.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer1
                port:
                  name: general
            path: /
            pathType: ImplementationSpecific
    - host: org0-orderer1-admin.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer1
                port:
                  name: admin
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org0-orderer1.localho.st
    - hosts:
        - org0-orderer1-admin.localho.st
certificate.cert-manager.io/org0-orderer1-tls-cert created
configmap/org0-orderer1-env created
deployment.apps/org0-orderer1 created
service/org0-orderer1 created
ingress.networking.k8s.io/org0-orderer1 created
Applying template kube/org0/org0-orderer2.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org0-orderer2-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org0-orderer2
    - org0-orderer2.test-network.svc.cluster.local
    - org0-orderer2.localho.st
    - org0-orderer2-admin.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org0-orderer2-tls-cert
  issuerRef:
    name: org0-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org0-orderer2-env
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: INFO # debug:cauthdsl,policies,msp,common.configtx,common.channelconfig=info
  ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
  ORDERER_GENERAL_LISTENPORT: "6050"
  ORDERER_GENERAL_LOCALMSPID: OrdererMSP
  ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp
  ORDERER_GENERAL_TLS_ENABLED: "true"
  ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_GENERAL_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  ORDERER_GENERAL_BOOTSTRAPMETHOD: none
  ORDERER_ADMIN_TLS_ENABLED: "true"
  ORDERER_ADMIN_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_ADMIN_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_ADMIN_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  # Authenticate client connections with the org's ecert / admin user enrollments
  ORDERER_ADMIN_TLS_CLIENTROOTCAS: "[/var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer2.org0.example.com/msp/cacerts/org0-ca.pem]"
  ORDERER_FILELEDGER_LOCATION: /var/hyperledger/fabric/data/orderer2
  ORDERER_CONSENSUS_WALDIR: /var/hyperledger/fabric/data/orderer2/etcdraft/wal
  ORDERER_CONSENSUS_SNAPDIR: /var/hyperledger/fabric/data/orderer2/etcdraft/wal
  ORDERER_OPERATIONS_LISTENADDRESS: 0.0.0.0:8443
  ORDERER_ADMIN_LISTENADDRESS: 0.0.0.0:9443

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org0-orderer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org0-orderer2
  template:
    metadata:
      labels:
        app: org0-orderer2
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-orderer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org0-orderer2-env
          ports:
            - containerPort: 6050
            - containerPort: 8443
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org0
        - name: fabric-config
          configMap:
            name: org0-config
        - name: tls-cert-volume
          secret:
            secretName: org0-orderer2-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org0-orderer2
spec:
  ports:
    - name: general
      port: 6050
      protocol: TCP
    - name: operations
      port: 8443
      protocol: TCP
    - name: admin
      port: 9443
      protocol: TCP
  selector:
    app: org0-orderer2

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org0-orderer2
  name: org0-orderer2
spec:
  ingressClassName: nginx
  rules:
    - host: org0-orderer2.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer2
                port:
                  name: general
            path: /
            pathType: ImplementationSpecific
    - host: org0-orderer2-admin.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer2
                port:
                  name: admin
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org0-orderer2.localho.st
    - hosts:
        - org0-orderer2-admin.localho.st
certificate.cert-manager.io/org0-orderer2-tls-cert created
configmap/org0-orderer2-env created
deployment.apps/org0-orderer2 created
service/org0-orderer2 created
ingress.networking.k8s.io/org0-orderer2 created
Applying template kube/org0/org0-orderer3.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org0-orderer3-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org0-orderer3
    - org0-orderer3.test-network.svc.cluster.local
    - org0-orderer3.localho.st
    - org0-orderer3-admin.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org0-orderer3-tls-cert
  issuerRef:
    name: org0-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org0-orderer3-env
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: INFO # debug:cauthdsl,policies,msp,common.configtx,common.channelconfig=info
  ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
  ORDERER_GENERAL_LISTENPORT: "6050"
  ORDERER_GENERAL_LOCALMSPID: OrdererMSP
  ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp
  ORDERER_GENERAL_TLS_ENABLED: "true"
  ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_GENERAL_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  ORDERER_GENERAL_BOOTSTRAPMETHOD: none
  ORDERER_ADMIN_TLS_ENABLED: "true"
  ORDERER_ADMIN_TLS_CERTIFICATE: /var/hyperledger/fabric/config/tls/tls.crt
  ORDERER_ADMIN_TLS_ROOTCAS: /var/hyperledger/fabric/config/tls/ca.crt
  ORDERER_ADMIN_TLS_PRIVATEKEY: /var/hyperledger/fabric/config/tls/tls.key
  # Authenticate client connections with the org's ecert / admin user enrollments
  ORDERER_ADMIN_TLS_CLIENTROOTCAS: "[/var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/orderers/org0-orderer3.org0.example.com/msp/cacerts/org0-ca.pem]"
  ORDERER_FILELEDGER_LOCATION: /var/hyperledger/fabric/data/orderer3
  ORDERER_CONSENSUS_WALDIR: /var/hyperledger/fabric/data/orderer3/etcdraft/wal
  ORDERER_CONSENSUS_SNAPDIR: /var/hyperledger/fabric/data/orderer3/etcdraft/wal
  ORDERER_OPERATIONS_LISTENADDRESS: 0.0.0.0:8443
  ORDERER_ADMIN_LISTENADDRESS: 0.0.0.0:9443

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org0-orderer3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org0-orderer3
  template:
    metadata:
      labels:
        app: org0-orderer3
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-orderer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org0-orderer3-env
          ports:
            - containerPort: 6050
            - containerPort: 8443
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org0
        - name: fabric-config
          configMap:
            name: org0-config
        - name: tls-cert-volume
          secret:
            secretName: org0-orderer3-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org0-orderer3
spec:
  ports:
    - name: general
      port: 6050
      protocol: TCP
    - name: operations
      port: 8443
      protocol: TCP
    - name: admin
      port: 9443
      protocol: TCP
  selector:
    app: org0-orderer3

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org0-orderer3
  name: org0-orderer3
spec:
  ingressClassName: nginx
  rules:
    - host: org0-orderer3.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer3
                port:
                  name: general
            path: /
            pathType: ImplementationSpecific
    - host: org0-orderer3-admin.localho.st
      http:
        paths:
          - backend:
              service:
                name: org0-orderer3
                port:
                  name: admin
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org0-orderer3.localho.st
    - hosts:
        - org0-orderer3-admin.localho.st
certificate.cert-manager.io/org0-orderer3-tls-cert created
configmap/org0-orderer3-env created
deployment.apps/org0-orderer3 created
service/org0-orderer3 created
ingress.networking.k8s.io/org0-orderer3 created
Waiting for deployment "org0-orderer1" rollout to finish: 0 of 1 updated replicas are available...
deployment "org0-orderer1" successfully rolled out
Waiting for deployment "org0-orderer2" rollout to finish: 0 of 1 updated replicas are available...
deployment "org0-orderer2" successfully rolled out
Waiting for deployment "org0-orderer3" rollout to finish: 0 of 1 updated replicas are available...
deployment "org0-orderer3" successfully rolled out
Applying template kube/org1/org1-peer1.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org1-peer1-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org1-peer1
    - org1-peer1.test-network.svc.cluster.local
    - org1-peer1.localho.st
    - org1-peer-gateway-svc
    - org1-peer-gateway-svc.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org1-peer1-tls-cert
  issuerRef:
    name: org1-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org1-peer1-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org1-peer1.org1.example.com
  CORE_PEER_ADDRESS: org1-peer1:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org1-peer1:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org1-peer2:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org1-peer1.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org1MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer1.org1.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org1-peer1.org1.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org1-peer1.org1.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org1peer1\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org1-peer1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org1-peer1
  template:
    metadata:
      labels:
        app: org1-peer1
        org: org1
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org1-peer1-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin" 
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org1
        - name: fabric-config
          configMap:
            name: org1-config
        - name: tls-cert-volume
          secret:
            secretName: org1-peer1-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org1-peer1
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org1-peer1
---
apiVersion: v1
kind: Service
metadata:
  name: org1-peer-gateway-svc
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
  selector:
    org: org1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org1-peer1
  name: org1-peer1
spec:
  ingressClassName: nginx
  rules:
    - host: org1-peer1.localho.st
      http:
        paths:
          - backend:
              service:
                name: org1-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
    - host: org1-peer-gateway-svc.localho.st
      http:
        paths:
          - backend:
              service:
                name: org1-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org1-peer1.localho.st
    - hosts:
        - org1-peer-gateway-svc.localho.st
certificate.cert-manager.io/org1-peer1-tls-cert created
configmap/org1-peer1-config created
deployment.apps/org1-peer1 created
service/org1-peer1 created
service/org1-peer-gateway-svc created
ingress.networking.k8s.io/org1-peer1 created
Applying template kube/org1/org1-peer2.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org1-peer2-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org1-peer2
    - org1-peer-gateway-svc
    - org1-peer2.test-network.svc.cluster.local
    - org1-peer2.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org1-peer2-tls-cert
  issuerRef:
    name: org1-tls-cert-issuer


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org1-peer2-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org1-peer2.org1.example.com
  CORE_PEER_ADDRESS: org1-peer2:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org1-peer2:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org1-peer1:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org1-peer2.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org1MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/peers/org1-peer2.org1.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org1-peer2.org1.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org1-peer2.org1.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org1peer2\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org1-peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org1-peer2
  template:
    metadata:
      labels:
        app: org1-peer2
        org: org1
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org1-peer2-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin" 
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org1
        - name: fabric-config
          configMap:
            name: org1-config
        - name: tls-cert-volume
          secret:
            secretName: org1-peer2-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org1-peer2
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org1-peer2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org1-peer2
  name: org1-peer2
spec:
  ingressClassName: nginx
  rules:
    - host: org1-peer2.localho.st
      http:
        paths:
          - backend:
              service:
                name: org1-peer2
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org1-peer2.localho.stcertificate.cert-manager.io/org1-peer2-tls-cert created
configmap/org1-peer2-config created
deployment.apps/org1-peer2 created
service/org1-peer2 created
ingress.networking.k8s.io/org1-peer2 created
Applying template kube/org2/org2-peer1.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org2-peer1-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org2-peer1
    - org2-peer1.test-network.svc.cluster.local
    - org2-peer1.localho.st
    - org2-peer-gateway-svc
    - org2-peer-gateway-svc.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org2-peer1-tls-cert
  issuerRef:
    name: org2-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org2-peer1-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org2-peer1.org2.example.com
  CORE_PEER_ADDRESS: org2-peer1:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org2-peer1:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org2-peer2:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org2-peer1.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org2MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer1.org2.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org2-peer1.org2.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org2-peer1.org2.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org2peer1\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org2-peer1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org2-peer1
  template:
    metadata:
      labels:
        app: org2-peer1
        org: org2
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org2-peer1-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin" 
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org2
        - name: fabric-config
          configMap:
            name: org2-config
        - name: tls-cert-volume
          secret:
            secretName: org2-peer1-tls-cert          
---
apiVersion: v1
kind: Service
metadata:
  name: org2-peer1
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org2-peer1
---
apiVersion: v1
kind: Service
metadata:
  name: org2-peer-gateway-svc
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
  selector:
    org: org2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org2-peer1
  name: org2-peer1
spec:
  ingressClassName: nginx
  rules:
    - host: org2-peer1.localho.st
      http:
        paths:
          - backend:
              service:
                name: org2-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
    - host: org2-peer-gateway-svc.localho.st
      http:
        paths:
          - backend:
              service:
                name: org2-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org2-peer1.localho.st
    - hosts:
        - org2-peer-gateway-svc.localho.st
certificate.cert-manager.io/org2-peer1-tls-cert created
configmap/org2-peer1-config created
deployment.apps/org2-peer1 created
service/org2-peer1 created
service/org2-peer-gateway-svc created
ingress.networking.k8s.io/org2-peer1 created
Applying template kube/org2/org2-peer2.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org2-peer2-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org2-peer2
    - org2-peer-gateway-svc
    - org2-peer2.test-network.svc.cluster.local
    - org2-peer2.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org2-peer2-tls-cert
  issuerRef:
    name: org2-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org2-peer2-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org2-peer2.org2.example.com
  CORE_PEER_ADDRESS: org2-peer2:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org2-peer2:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org2-peer1:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org2-peer2.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org2MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/peers/org2-peer2.org2.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org2-peer2.org2.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org2-peer2.org2.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org2peer2\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org2-peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org2-peer2
  template:
    metadata:
      labels:
        app: org2-peer2
        org: org2
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org2-peer2-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin" 
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org2
        - name: fabric-config
          configMap:
            name: org2-config
        - name: tls-cert-volume
          secret:
            secretName: org2-peer2-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org2-peer2
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org2-peer2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org2-peer2
  name: org2-peer2
spec:
  ingressClassName: nginx
  rules:
    - host: org2-peer2.localho.st
      http:
        paths:
          - backend:
              service:
                name: org2-peer2
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org2-peer2.localho.stcertificate.cert-manager.io/org2-peer2-tls-cert created
configmap/org2-peer2-config created
deployment.apps/org2-peer2 created
service/org2-peer2 created
ingress.networking.k8s.io/org2-peer2 created
Applying template kube/org3/org3-peer1.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org3-peer1-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org3-peer1
    - org3-peer1.test-network.svc.cluster.local
    - org3-peer1.localho.st
    - org3-peer-gateway-svc
    - org3-peer-gateway-svc.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org3-peer1-tls-cert
  issuerRef:
    name: org3-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org3-peer1-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org3-peer1.org3.example.com
  CORE_PEER_ADDRESS: org3-peer1:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org3-peer1:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org3-peer2:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org3-peer1.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org3MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer1.org3.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org3-peer1.org3.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org3-peer1.org3.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org3peer1\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org3-peer1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org3-peer1
  template:
    metadata:
      labels:
        app: org3-peer1
        org: org3
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org3-peer1-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin"
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org3
        - name: fabric-config
          configMap:
            name: org3-config
        - name: tls-cert-volume
          secret:
            secretName: org3-peer1-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org3-peer1
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org3-peer1
---
apiVersion: v1
kind: Service
metadata:
  name: org3-peer-gateway-svc
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
  selector:
    org: org3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org3-peer1
  name: org3-peer1
spec:
  ingressClassName: nginx
  rules:
    - host: org3-peer1.localho.st
      http:
        paths:
          - backend:
              service:
                name: org3-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
    - host: org3-peer-gateway-svc.localho.st
      http:
        paths:
          - backend:
              service:
                name: org3-peer1
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org3-peer1.localho.st
    - hosts:
        - org3-peer-gateway-svc.localho.st
certificate.cert-manager.io/org3-peer1-tls-cert created
configmap/org3-peer1-config created
deployment.apps/org3-peer1 created
service/org3-peer1 created
service/org3-peer-gateway-svc created
ingress.networking.k8s.io/org3-peer1 created
Applying template kube/org3/org3-peer2.yaml:
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org3-peer2-tls-cert
  namespace: test-network
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org3-peer2
    - org3-peer-gateway-svc
    - org3-peer2..svc.cluster.local
    - org3-peer2.localho.st
  ipAddresses:
    - 127.0.0.1
  secretName: org3-peer2-tls-cert
  issuerRef:
    name: org3-tls-cert-issuer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org3-peer2-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org3-peer2.org3.example.com
  CORE_PEER_ADDRESS: org3-peer2:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org3-peer2:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  # bootstrap peer is the other peer in the same org
  CORE_PEER_GOSSIP_BOOTSTRAP: org3-peer1:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org3-peer2.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org3MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org3.example.com/peers/org3-peer2.org3.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org3-peer2.org3.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org3-peer2.org3.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"org3peer2\"}"
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org3-peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org3-peer2
  template:
    metadata:
      labels:
        app: org3-peer2
        org: org3
    spec:
      containers:
        - name: main
          image: hyperledger/fabric-peer:2.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org3-peer2-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin"
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org3
        - name: fabric-config
          configMap:
            name: org3-config
        - name: tls-cert-volume
          secret:
            secretName: org3-peer2-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org3-peer2
spec:
  ports:
    - name: grpc
      port: 7051
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
    - name: operations
      port: 9443
      protocol: TCP
  selector:
    app: org3-peer2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org3-peer2
  name: org3-peer2
spec:
  ingressClassName: nginx
  rules:
    - host: org3-peer2.localho.st
      http:
        paths:
          - backend:
              service:
                name: org3-peer2
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org3-peer2.localho.stcertificate.cert-manager.io/org3-peer2-tls-cert created
configmap/org3-peer2-config created
deployment.apps/org3-peer2 created
service/org3-peer2 created
ingress.networking.k8s.io/org3-peer2 created
Waiting for deployment "org1-peer1" rollout to finish: 0 of 1 updated replicas are available...
deployment "org1-peer1" successfully rolled out
Waiting for deployment "org1-peer2" rollout to finish: 0 of 1 updated replicas are available...
deployment "org1-peer2" successfully rolled out
Waiting for deployment "org2-peer1" rollout to finish: 0 of 1 updated replicas are available...
deployment "org2-peer1" successfully rolled out
deployment "org2-peer2" successfully rolled out
deployment "org3-peer1" successfully rolled out
deployment "org3-peer2" successfully rolled out
==============================================
Registering org admin org0admin
2022/10/26 14:18:27 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:18:27 [INFO] TLS Enabled
2022/10/26 14:18:27 [INFO] TLS Enabled
Password: org0adminpw
Registering org admin org1admin
2022/10/26 14:18:27 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:18:27 [INFO] TLS Enabled
2022/10/26 14:18:27 [INFO] TLS Enabled
Password: org1adminpw
Registering org admin org2admin
2022/10/26 14:18:27 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:18:27 [INFO] TLS Enabled
2022/10/26 14:18:27 [INFO] TLS Enabled
Password: org2adminpw
Registering org admin org3admin
2022/10/26 14:18:27 [INFO] Configuration file location: /home/app-systems/.fabric-ca-client/fabric-ca-client-config.yaml
2022/10/26 14:18:27 [INFO] TLS Enabled
2022/10/26 14:18:27 [INFO] TLS Enabled
Password: org3adminpw
Enrolling orderer org admin org0admin
2022/10/26 14:18:28 [INFO] Created a default configuration file at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/fabric-ca-client-config.yaml
2022/10/26 14:18:28 [INFO] TLS Enabled
2022/10/26 14:18:28 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:18:28 [INFO] encoded CSR
2022/10/26 14:18:28 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/msp/signcerts/cert.pem
2022/10/26 14:18:28 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/msp/cacerts/org0-ca-localho-st-443.pem
2022/10/26 14:18:28 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/msp/IssuerPublicKey
2022/10/26 14:18:28 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/msp/IssuerRevocationPublicKey
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org0/users/org0admin/msp/config.yaml with cert org0-ca-localho-st-443.pem
Enrolling peer org admin org1admin
2022/10/26 14:18:28 [INFO] Created a default configuration file at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/fabric-ca-client-config.yaml
2022/10/26 14:18:28 [INFO] TLS Enabled
2022/10/26 14:18:28 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:18:28 [INFO] encoded CSR
2022/10/26 14:18:28 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/msp/signcerts/cert.pem
2022/10/26 14:18:28 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/msp/cacerts/org1-ca-localho-st-443.pem
2022/10/26 14:18:28 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/msp/IssuerPublicKey
2022/10/26 14:18:28 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/msp/IssuerRevocationPublicKey
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org1/users/org1admin/msp/config.yaml with cert org1-ca-localho-st-443.pem
Enrolling peer org admin org2admin
2022/10/26 14:18:28 [INFO] Created a default configuration file at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/fabric-ca-client-config.yaml
2022/10/26 14:18:28 [INFO] TLS Enabled
2022/10/26 14:18:28 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:18:28 [INFO] encoded CSR
2022/10/26 14:18:28 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/msp/signcerts/cert.pem
2022/10/26 14:18:28 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/msp/cacerts/org2-ca-localho-st-443.pem
2022/10/26 14:18:28 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/msp/IssuerPublicKey
2022/10/26 14:18:28 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/msp/IssuerRevocationPublicKey
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org2/users/org2admin/msp/config.yaml with cert org2-ca-localho-st-443.pem
Enrolling peer org admin org3admin
2022/10/26 14:18:28 [INFO] Created a default configuration file at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/fabric-ca-client-config.yaml
2022/10/26 14:18:28 [INFO] TLS Enabled
2022/10/26 14:18:28 [INFO] generating key: &{A:ecdsa S:256}
2022/10/26 14:18:28 [INFO] encoded CSR
2022/10/26 14:18:28 [INFO] Stored client certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/msp/signcerts/cert.pem
2022/10/26 14:18:28 [INFO] Stored root CA certificate at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/msp/cacerts/org3-ca-localho-st-443.pem
2022/10/26 14:18:28 [INFO] Stored Issuer public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/msp/IssuerPublicKey
2022/10/26 14:18:28 [INFO] Stored Issuer revocation public key at /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/msp/IssuerRevocationPublicKey
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/enrollments/org3/users/org3admin/msp/config.yaml with cert org3-ca-localho-st-443.pem
==============================================
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/ordererOrganizations/org0/msp/config.yaml with cert ca-signcert.pem
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/peerOrganizations/org1/msp/config.yaml with cert ca-signcert.pem
Extracting TLS cert for org0 orderer1
Extracting TLS cert for org0 orderer2
Extracting TLS cert for org0 orderer3
[34m2022-10-26 14:18:29.715 EEST 0001 INFO[0m [common.tools.configtxgen] [34;1mmain[0m -> Loading configuration
[34m2022-10-26 14:18:29.743 EEST 0002 INFO[0m [common.tools.configtxgen.localconfig] [34;1mcompleteInitialization[0m -> orderer type: etcdraft
[34m2022-10-26 14:18:29.743 EEST 0003 INFO[0m [common.tools.configtxgen.localconfig] [34;1mLoad[0m -> Loaded configuration: /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/configtx.yaml
[34m2022-10-26 14:18:29.744 EEST 0004 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Generating genesis block
[34m2022-10-26 14:18:29.744 EEST 0005 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Creating application channel genesis block
[34m2022-10-26 14:18:29.744 EEST 0006 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Writing genesis block
Status: 201
{
	"name": "sla",
	"url": "/participation/v1/channels/sla",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "sla",
	"url": "/participation/v1/channels/sla",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "sla",
	"url": "/participation/v1/channels/sla",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

[34m2022-10-26 14:18:40.065 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:18:40.464 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
[34m2022-10-26 14:18:40.503 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:18:40.887 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
==============================================
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/ordererOrganizations/org0/msp/config.yaml with cert ca-signcert.pem
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/peerOrganizations/org2/msp/config.yaml with cert ca-signcert.pem
Extracting TLS cert for org0 orderer1
Extracting TLS cert for org0 orderer2
Extracting TLS cert for org0 orderer3
[34m2022-10-26 14:18:41.900 EEST 0001 INFO[0m [common.tools.configtxgen] [34;1mmain[0m -> Loading configuration
[34m2022-10-26 14:18:41.923 EEST 0002 INFO[0m [common.tools.configtxgen.localconfig] [34;1mcompleteInitialization[0m -> orderer type: etcdraft
[34m2022-10-26 14:18:41.923 EEST 0003 INFO[0m [common.tools.configtxgen.localconfig] [34;1mLoad[0m -> Loaded configuration: /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/configtx.yaml
[34m2022-10-26 14:18:41.924 EEST 0004 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Generating genesis block
[34m2022-10-26 14:18:41.924 EEST 0005 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Creating application channel genesis block
[34m2022-10-26 14:18:41.925 EEST 0006 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Writing genesis block
Status: 201
{
	"name": "vru",
	"url": "/participation/v1/channels/vru",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "vru",
	"url": "/participation/v1/channels/vru",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "vru",
	"url": "/participation/v1/channels/vru",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

[34m2022-10-26 14:18:52.226 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:18:52.626 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
[34m2022-10-26 14:18:52.664 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:18:53.034 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
==============================================
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/ordererOrganizations/org0/msp/config.yaml with cert ca-signcert.pem
Creating msp config /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/channel-msp/peerOrganizations/org3/msp/config.yaml with cert ca-signcert.pem
Extracting TLS cert for org0 orderer1
Extracting TLS cert for org0 orderer2
Extracting TLS cert for org0 orderer3
[34m2022-10-26 14:18:54.049 EEST 0001 INFO[0m [common.tools.configtxgen] [34;1mmain[0m -> Loading configuration
[34m2022-10-26 14:18:54.073 EEST 0002 INFO[0m [common.tools.configtxgen.localconfig] [34;1mcompleteInitialization[0m -> orderer type: etcdraft
[34m2022-10-26 14:18:54.073 EEST 0003 INFO[0m [common.tools.configtxgen.localconfig] [34;1mLoad[0m -> Loaded configuration: /home/app-systems/go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/build/configtx.yaml
[34m2022-10-26 14:18:54.074 EEST 0004 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Generating genesis block
[34m2022-10-26 14:18:54.074 EEST 0005 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Creating application channel genesis block
[34m2022-10-26 14:18:54.074 EEST 0006 INFO[0m [common.tools.configtxgen] [34;1mdoOutputBlock[0m -> Writing genesis block
Status: 201
{
	"name": "parts",
	"url": "/participation/v1/channels/parts",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "parts",
	"url": "/participation/v1/channels/parts",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

Status: 201
{
	"name": "parts",
	"url": "/participation/v1/channels/parts",
	"consensusRelation": "consenter",
	"status": "active",
	"height": 1
}

[34m2022-10-26 14:19:04.435 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:19:04.821 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
[34m2022-10-26 14:19:04.860 EEST 0001 INFO[0m [channelCmd] [34;1mInitCmdFactory[0m -> Endorser and orderer connections initialized
[34m2022-10-26 14:19:05.251 EEST 0002 INFO[0m [channelCmd] [34;1mexecuteJoin[0m -> Successfully submitted proposal to join channel
==============================================
Sending build context to Docker daemon  23.02MB
Step 1/7 : FROM golang:1.17-alpine3.16
 ---> 270c4f58750f
Step 2/7 : WORKDIR /go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/ccas_sla
 ---> Using cache
 ---> 7f206be0f080
Step 3/7 : COPY . .
 ---> Using cache
 ---> 9e8ce19fa4dc
Step 4/7 : RUN go get -d -v ./...
 ---> Using cache
 ---> 0ea77ff5c6ab
Step 5/7 : RUN go install -v ./...
 ---> Using cache
 ---> bf8a44fea3dd
Step 6/7 : EXPOSE 9999
 ---> Using cache
 ---> 14f2c530f386
Step 7/7 : CMD ["ccas_sla"]
 ---> Using cache
 ---> 68af1c4219d5
Successfully built 68af1c4219d5
Successfully tagged slasc-bridge:latest
Using default tag: latest
The push refers to repository [localhost:5000/slasc-bridge]
fc4321db017e: Preparing
2acf027e8742: Preparing
186aed028716: Preparing
d2f717c74fc0: Preparing
fed9565c145c: Preparing
60af18e613ad: Preparing
925e9633fd86: Preparing
7b35f2def65d: Preparing
ec34fcc1d526: Preparing
925e9633fd86: Waiting
7b35f2def65d: Waiting
ec34fcc1d526: Waiting
60af18e613ad: Waiting
fed9565c145c: Pushed
d2f717c74fc0: Pushed
925e9633fd86: Pushed
7b35f2def65d: Pushed
186aed028716: Pushed
ec34fcc1d526: Pushed
fc4321db017e: Pushed
2acf027e8742: Pushed
60af18e613ad: Pushed
latest: digest: sha256:d0f0be155bf10ea8a664a45cf705d2adb413dda9d27a8fcffd846893424ae451 size: 2207
deployment.apps/org1peer1-ccaas-slasc-bridge created
service/org1peer1-ccaas-slasc-bridge created
Waiting for deployment "org1peer1-ccaas-slasc-bridge" rollout to finish: 0 of 1 updated replicas are available...
deployment "org1peer1-ccaas-slasc-bridge" successfully rolled out
deployment.apps/org1peer2-ccaas-slasc-bridge created
service/org1peer2-ccaas-slasc-bridge created
Waiting for deployment "org1peer2-ccaas-slasc-bridge" rollout to finish: 0 of 1 updated replicas are available...
deployment "org1peer2-ccaas-slasc-bridge" successfully rolled out
[34m2022-10-26 14:19:33.905 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nMslasc-bridge:15efc8016d6665277166ae647f026b5db667594c62ffea410e22f638e453c4a7\022\014slasc-bridge" > 
[34m2022-10-26 14:19:33.905 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: slasc-bridge:15efc8016d6665277166ae647f026b5db667594c62ffea410e22f638e453c4a7
[34m2022-10-26 14:19:33.954 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nMslasc-bridge:15efc8016d6665277166ae647f026b5db667594c62ffea410e22f638e453c4a7\022\014slasc-bridge" > 
[34m2022-10-26 14:19:33.955 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: slasc-bridge:15efc8016d6665277166ae647f026b5db667594c62ffea410e22f638e453c4a7
[34m2022-10-26 14:19:36.547 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [ab99f9405bf45cb80792a635396ace743ae20fd1e76422d5967e46ede5117766] committed with status (VALID) at org1-peer1.localho.st:443
[34m2022-10-26 14:19:38.793 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [48d5695e38e14dcf0cef744591aa36c6dbf4f7f7193ebe0ab8d7882548916475] committed with status (VALID) at org1-peer1.localho.st:443
Sending build context to Docker daemon  23.01MB
Step 1/7 : FROM golang:1.17-alpine3.16
 ---> 270c4f58750f
Step 2/7 : WORKDIR /go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/ccas_vru
 ---> Running in b2ac909894b8
Removing intermediate container b2ac909894b8
 ---> e6751f8143d5
Step 3/7 : COPY . .
 ---> 7000c47b9d4c
Step 4/7 : RUN go get -d -v ./...
 ---> Running in 1cee0cd2bb01
[91mgo: downloading github.com/hyperledger/fabric-chaincode-go v0.0.0-20200424173110-d7076418f212
go: downloading github.com/LoniasGR/hyperledger-fabric-sla-chaincode/lib v0.0.0-20220808134520-5f069a3850a4
go: downloading github.com/hyperledger/fabric-contract-api-go v1.1.1
[0m[91mgo: downloading github.com/golang/protobuf v1.3.3
[0m[91mgo: downloading github.com/hyperledger/fabric-protos-go v0.0.0-20200707132912-fee30f3ccd23
[0m[91mgo: downloading google.golang.org/grpc v1.29.1
[0m[91mgo: downloading github.com/hyperledger/fabric-sdk-go v1.0.0
[0m[91mgo: downloading github.com/xeipuuv/gojsonschema v1.2.0
[0m[91mgo: downloading github.com/go-openapi/spec v0.19.4
[0m[91mgo: downloading github.com/gobuffalo/packr v1.30.1
[0m[91mgo: downloading google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55
[0m[91mgo: downloading golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297
[0m[91mgo: downloading github.com/gobuffalo/envy v1.7.0
[0m[91mgo: downloading github.com/gobuffalo/packd v0.3.0
[0m[91mgo: downloading github.com/pkg/errors v0.8.1
[0m[91mgo: downloading github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415
[0m[91mgo: downloading golang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3
[0m[91mgo: downloading github.com/go-openapi/jsonpointer v0.19.3
[0m[91mgo: downloading github.com/go-openapi/jsonreference v0.19.2
[0m[91mgo: downloading github.com/go-openapi/swag v0.19.5
[0m[91mgo: downloading github.com/joho/godotenv v1.3.0
[0m[91mgo: downloading github.com/rogpeppe/go-internal v1.3.0
[0m[91mgo: downloading github.com/cloudflare/cfssl v1.4.1
[0m[91mgo: downloading golang.org/x/crypto v0.0.0-20200221231518-2aa609cf4a9d
[0m[91mgo: downloading github.com/spf13/cast v1.3.1
[0m[91mgo: downloading github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f
[0m[91mgo: downloading github.com/PuerkitoBio/purell v1.1.1
[0m[91mgo: downloading github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e
[0m[91mgo: downloading gopkg.in/yaml.v2 v2.3.0
[0m[91mgo: downloading github.com/mitchellh/mapstructure v1.3.2
[0m[91mgo: downloading github.com/go-kit/kit v0.8.0
[0m[91mgo: downloading github.com/hyperledger/fabric-lib-go v1.0.0
[0m[91mgo: downloading github.com/prometheus/client_golang v1.1.0
[0m[91mgo: downloading github.com/stretchr/testify v1.5.1
[0m[91mgo: downloading github.com/google/certificate-transparency-go v1.0.21
[0m[91mgo: downloading golang.org/x/text v0.3.2
[0m[91mgo: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578
[0m[91mgo: downloading github.com/davecgh/go-spew v1.1.1
[0m[91mgo: downloading github.com/pmezard/go-difflib v1.0.0
[0m[91mgo: downloading github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4
[0m[91mgo: downloading github.com/prometheus/common v0.6.0
[0m[91mgo: downloading github.com/golang/mock v1.4.3
[0m[91mgo: downloading github.com/beorn7/perks v1.0.1
[0m[91mgo: downloading github.com/prometheus/procfs v0.0.3
[0m[91mgo: downloading github.com/go-logfmt/logfmt v0.4.0
[0m[91mgo: downloading github.com/spf13/viper v1.3.2
[0m[91mgo: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1
[0m[91mgo: downloading github.com/hyperledger/fabric-config v0.0.5
[0m[91mgo: downloading github.com/zmap/zlint v0.0.0-20190806154020-fd021b4cfbeb
[0m[91mgo: downloading github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515
[0m[91mgo: downloading github.com/fsnotify/fsnotify v1.4.7
[0m[91mgo: downloading github.com/hashicorp/hcl v1.0.0
[0m[91mgo: downloading github.com/magiconair/properties v1.8.1
[0m[91mgo: downloading github.com/pelletier/go-toml v1.8.0
[0m[91mgo: downloading github.com/spf13/afero v1.3.1
[0m[91mgo: downloading github.com/spf13/jwalterweatherman v1.1.0
[0m[91mgo: downloading github.com/spf13/pflag v1.0.5
[0m[91mgo: downloading github.com/Knetic/govaluate v3.0.0+incompatible
[0m[91mgo: downloading github.com/zmap/zcrypto v0.0.0-20190729165852-9051775e6a2e
[0m[91mgo: downloading github.com/weppos/publicsuffix-go v0.5.0
[0mRemoving intermediate container 1cee0cd2bb01
 ---> a37e6be71c63
Step 5/7 : RUN go install -v ./...
 ---> Running in f8d4640ec7d7
[91mgoogle.golang.org/grpc/internal/grpclog
[0m[91mgoogle.golang.org/grpc/serviceconfig
[0m[91mgolang.org/x/crypto/cryptobyte/asn1
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/options
[0m[91mgolang.org/x/net/internal/timeseries
[0m[91mgithub.com/golang/protobuf/proto
[0m[91mgoogle.golang.org/grpc/backoff
[0m[91mgoogle.golang.org/grpc/grpclog
[0m[91mgoogle.golang.org/grpc/credentials/internal
[0m[91mgolang.org/x/net/trace
[0m[91mgoogle.golang.org/grpc/connectivity
[0m[91mgoogle.golang.org/grpc/internal
[0m[91mgoogle.golang.org/grpc/metadata
[0m[91mgoogle.golang.org/grpc/attributes
[0m[91mgoogle.golang.org/grpc/internal/grpcrand
[0m[91mgoogle.golang.org/grpc/codes
[0m[91mgoogle.golang.org/grpc/encoding
[0m[91mgoogle.golang.org/grpc/internal/backoff
[0m[91mgoogle.golang.org/grpc/internal/balancerload
[0m[91mgoogle.golang.org/grpc/internal/buffer
[0m[91mgolang.org/x/sys/unix
[0m[91mgoogle.golang.org/grpc/internal/envconfig
[0m[91mgoogle.golang.org/grpc/internal/grpcsync
[0m[91mgolang.org/x/text/transform
[0m[91mgolang.org/x/text/unicode/bidi
[0m[91mgolang.org/x/text/unicode/norm
[0m[91mgolang.org/x/text/secure/bidirule
[0m[91mgolang.org/x/net/http2/hpack
[0m[91mgoogle.golang.org/grpc/keepalive
[0m[91mgoogle.golang.org/grpc/stats
[0m[91mgolang.org/x/net/idna
[0m[91mgoogle.golang.org/grpc/tap
[0m[91mgoogle.golang.org/grpc/naming
[0m[91mgoogle.golang.org/grpc/internal/syscall
[0m[91mgithub.com/cloudflare/cfssl/errors
[0m[91mgolang.org/x/net/http/httpguts
[0m[91mgithub.com/hyperledger/fabric-protos-go/msp
[0m[91mgithub.com/golang/protobuf/ptypes/timestamp
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/rwset
[0m[91mgoogle.golang.org/grpc/credentials
[0m[91mgoogle.golang.org/grpc/encoding/proto
[0m[91mgithub.com/golang/protobuf/ptypes/any
[0m[91mgithub.com/golang/protobuf/ptypes/duration
[0m[91mgoogle.golang.org/genproto/googleapis/rpc/status
[0m[91mgoogle.golang.org/grpc/resolver
[0m[91mgoogle.golang.org/grpc/internal/channelz
[0m[91mgoogle.golang.org/grpc/balancer
[0m[91mgithub.com/hyperledger/fabric-protos-go/common
[0m[91mgithub.com/golang/protobuf/ptypes
[0m[91mgoogle.golang.org/grpc/balancer/base
[0m[91mgoogle.golang.org/grpc/binarylog/grpc_binarylog_v1
[0m[91mgoogle.golang.org/grpc/balancer/roundrobin
[0m[91mgoogle.golang.org/grpc/internal/status
[0m[91mgoogle.golang.org/grpc/internal/grpcutil
[0m[91mgoogle.golang.org/grpc/internal/resolver/dns
[0m[91mgoogle.golang.org/grpc/internal/resolver/passthrough
[0m[91mgoogle.golang.org/grpc/status
[0m[91mgolang.org/x/net/http2
[0m[91mgoogle.golang.org/grpc/internal/binarylog
[0m[91mgoogle.golang.org/grpc/peer
[0m[91mgithub.com/cloudflare/cfssl/crypto/pkcs7
[0m[91mgolang.org/x/crypto/ed25519
[0m[91mgithub.com/cloudflare/cfssl/helpers/derhelpers
[0m[91mgithub.com/cloudflare/cfssl/log
[0m[91mgithub.com/google/certificate-transparency-go/asn1
[0m[91mgolang.org/x/crypto/cryptobyte
[0m[91mgolang.org/x/crypto/ocsp
[0m[91mgolang.org/x/crypto/pkcs12/internal/rc2
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/keyutil
[0m[91mgolang.org/x/crypto/pkcs12
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp
[0m[91mgithub.com/google/certificate-transparency-go/tls
[0m[91mgithub.com/google/certificate-transparency-go/x509/pkix
[0m[91mgithub.com/pkg/errors
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/core
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/metadata
[0m[91mgithub.com/google/certificate-transparency-go/x509
[0m[91mgithub.com/davecgh/go-spew/spew
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/signer
[0m[91mgithub.com/pmezard/go-difflib/difflib
[0m[91mgopkg.in/yaml.v2
[0m[91mgithub.com/mitchellh/mapstructure
[0m[91mgoogle.golang.org/grpc/internal/transport
[0m[91mgithub.com/spf13/cast
[0m[91mgithub.com/google/certificate-transparency-go
[0m[91mgithub.com/cloudflare/cfssl/helpers
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/lookup
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/utils
[0m[91mgithub.com/cloudflare/cfssl/csr
[0m[91mgolang.org/x/crypto/sha3
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite/bccsp/wrapper
[0m[91mgithub.com/stretchr/testify/assert
[0m[91mgithub.com/hyperledger/fabric-sdk-go/test/metadata
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/rwset/kvrwset
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/pathvar
[0m[91mgoogle.golang.org/grpc
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/multi
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/rwsetutil
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/metrics
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/identity
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/endpoint
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/crypto
[0m[91mgithub.com/hyperledger/fabric-protos-go/orderer/etcdraft
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/configtx
[0m[91mgithub.com/golang/mock/gomock
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/modlog
[0m[91mgithub.com/fsnotify/fsnotify
[0m[91mgithub.com/hashicorp/hcl/hcl/strconv
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/logging
[0m[91mgithub.com/hashicorp/hcl/hcl/token
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/logbridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/logbridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/comm/tls
[0m[91mgithub.com/hashicorp/hcl/hcl/ast
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/sw
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/msp
[0m[91mgithub.com/hashicorp/hcl/hcl/scanner
[0m[91mgithub.com/hashicorp/hcl/json/token
[0m[91mgithub.com/hashicorp/hcl/json/scanner
[0m[91mgithub.com/hashicorp/hcl/hcl/parser
[0m[91mgithub.com/hashicorp/hcl/json/parser
[0m[91mgithub.com/hashicorp/hcl/hcl/printer
[0m[91mgithub.com/hashicorp/hcl
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/factory/sw
[0m[91mgithub.com/hyperledger/fabric-protos-go/peer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite/bccsp/sw
[0m[91mgithub.com/hyperledger/fabric-protos-go/orderer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite
[0m[91mgithub.com/magiconair/properties
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/cryptosuitebridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkinternal/pkg/util
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/cryptosuitebridge
[0m[91mgithub.com/pelletier/go-toml
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/msp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/util
[0m[91mgithub.com/spf13/afero/mem
[0m[91mgithub.com/spf13/afero
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/status
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/retry
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/fab
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/protoutil
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/capabilities
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/options
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/verifier
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/context
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/comm
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/greylist
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/policies
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/msp/cache
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/txflags
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/context
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/test/mockfab
[0m[91mgithub.com/spf13/jwalterweatherman
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/channelconfig
[0m[91mgithub.com/spf13/pflag
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/dispatcher
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/peer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/txn
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/test
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/mocks
[0m[91mgithub.com/cloudflare/cfssl/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/channel/invoke
[0m[91mgithub.com/cloudflare/cfssl/certdb
[0m[91mgithub.com/cloudflare/cfssl/auth
[0m[91mgithub.com/cloudflare/cfssl/ocsp/config
[0m[91mgithub.com/weppos/publicsuffix-go/publicsuffix
[0m[91mgithub.com/zmap/zcrypto/json
[0m[91mgithub.com/zmap/zcrypto/util
[0m[91mgithub.com/zmap/zcrypto/x509/ct
[0m[91mgithub.com/zmap/zcrypto/x509/pkix
[0m[91mgithub.com/cloudflare/cfssl/info
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/attrmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/streamer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/tls
[0m[91mgolang.org/x/net/context
[0m[91mgithub.com/spf13/viper
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/rollingcounter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/blockfilter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/lbp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/seek
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/balanced
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/minblockheight
[0m[91mgithub.com/go-logfmt/logfmt
[0m[91mgithub.com/zmap/zcrypto/x509
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/preferorg
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/mocks
[0m[91mgithub.com/go-kit/kit/log
[0m[91mgithub.com/go-kit/kit/metrics
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/dispatcher
[0m[91mgithub.com/go-kit/kit/metrics/internal/lv
[0m[91mgithub.com/go-kit/kit/metrics/internal/ratemap
[0m[91mgithub.com/hyperledger/fabric-lib-go/healthz
[0m[91mgithub.com/go-kit/kit/util/conn
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/disabled
[0m[91mgithub.com/beorn7/perks/quantile
[0m[91mgithub.com/go-kit/kit/metrics/statsd
[0m[91mgithub.com/prometheus/client_model/go
[0m[91mgithub.com/matttproud/golang_protobuf_extensions/pbutil
[0m[91mgithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client
[0m[91mgithub.com/prometheus/common/model
[0m[91mgithub.com/prometheus/client_golang/prometheus/internal
[0m[91mgithub.com/prometheus/procfs/internal/fs
[0m[91mgithub.com/prometheus/procfs
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/internal/namer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/statsd
[0m[91mgithub.com/zmap/zlint/util
[0m[91mgithub.com/prometheus/common/expfmt
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/statsd/goruntime
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/middleware
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/comm
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/logbridge/httpadmin
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/cryptoutil
[0m[91mgithub.com/prometheus/client_golang/prometheus
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab
[0m[91mgithub.com/zmap/zlint/lints
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/signingmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/orderer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/keyvaluestore
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/staticdiscovery
[0m[91mgithub.com/hyperledger/fabric-protos-go/gossip
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/random
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/futurevalue
[0m[91mgithub.com/go-kit/kit/metrics/prometheus
[0m[91mgithub.com/prometheus/client_golang/prometheus/promhttp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/prometheus
[0m[91mgithub.com/hyperledger/fabric-protos-go/discovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/gossip/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/lazyref
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/discovery/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/discovery/mocks
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/operations
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/discovery/client
[0m[91mgithub.com/cloudflare/cfssl/config
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/lazycache
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/common/ccprovider
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver
[0m[91mgithub.com/cloudflare/cfssl/signer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/balancer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/sorter/balancedsorter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkinternal/pkg/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/sorter/blockheightsorter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/channel
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/channel/membership
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/client/credential
[0m[91mgithub.com/golang/protobuf/ptypes/struct
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/client/credential/x509
[0m[91mgithub.com/golang/protobuf/ptypes/empty
[0m[91mgithub.com/golang/protobuf/jsonpb
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/ordererext
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/peerext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/ledger/rwsetext
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/mspext
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/commonext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp/test/mockmsp
[0m[91mgithub.com/hyperledger/fabric-protos-go/peer/lifecycle
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/genesis
[0m[91mgithub.com/Knetic/govaluate
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/mocks
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxgen/genesisconfig
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxlator/update
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/policydsl
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/resource/genesisconfig
[0m[91mgithub.com/hyperledger/fabric-config/protolator
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/metrics/cfg
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxgen/encoder
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/shim/internal
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/queryresult
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/pkg/attrmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/resource
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/shim
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/pkg/cid
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/contractapi/utils
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/comm
[0m[91mgithub.com/mailru/easyjson/jlexer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/chconfig
[0m[91mgithub.com/mailru/easyjson/buffer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/filter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/connection
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/endpoint
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/channel
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/fabpvdr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defcore
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/dispatcher
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/discovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection
[0m[91mgithub.com/mailru/easyjson/jwriter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient
[0m[91mgithub.com/go-openapi/swag
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/dynamicdiscovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/msppvdr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defmsp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/fabricselection
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/event
[0m[91mgithub.com/PuerkitoBio/urlesc
[0m[91mgithub.com/go-openapi/jsonpointer
[0m[91mgolang.org/x/text/width
[0m[91mgithub.com/xeipuuv/gojsonpointer
[0m[91mgithub.com/xeipuuv/gojsonreference
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/chpvdr
[0m[91mgithub.com/joho/godotenv
[0m[91mgithub.com/PuerkitoBio/purell
[0m[91mgithub.com/xeipuuv/gojsonschema
[0m[91mgithub.com/go-openapi/jsonreference
[0m[91mgithub.com/rogpeppe/go-internal/semver
[0m[91mgithub.com/go-openapi/spec
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defsvc
[0m[91mgithub.com/rogpeppe/go-internal/module
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk
[0m[91mgithub.com/rogpeppe/go-internal/modfile
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/gateway
[0m[91mgithub.com/gobuffalo/envy
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal/types
[0m[91mgithub.com/LoniasGR/hyperledger-fabric-sla-chaincode/lib
[0m[91mgithub.com/gobuffalo/packd/internal/takeon/github.com/markbates/errx
[0m[91mgithub.com/gobuffalo/packd
[0m[91mgithub.com/gobuffalo/packr
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal/utils
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/metadata
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/serializer
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/contractapi
[0m[91mgithub.com/LoniasGR/hyperledger-fabric-sla-chaincode/ccas_vru
[0mRemoving intermediate container f8d4640ec7d7
 ---> 395a61afebdb
Step 6/7 : EXPOSE 9999
 ---> Running in 929df885e21d
Removing intermediate container 929df885e21d
 ---> beb041a2721c
Step 7/7 : CMD ["ccas_vru"]
 ---> Running in 4331c4b437d4
Removing intermediate container 4331c4b437d4
 ---> 26e39ec30498
Successfully built 26e39ec30498
Successfully tagged vru-positions:latest
Using default tag: latest
The push refers to repository [localhost:5000/vru-positions]
684861b1fd77: Preparing
3bd3a13d02f0: Preparing
55a17522af64: Preparing
289c8fa64e98: Preparing
fed9565c145c: Preparing
60af18e613ad: Preparing
925e9633fd86: Preparing
7b35f2def65d: Preparing
ec34fcc1d526: Preparing
60af18e613ad: Waiting
925e9633fd86: Waiting
7b35f2def65d: Waiting
ec34fcc1d526: Waiting
fed9565c145c: Mounted from slasc-bridge
60af18e613ad: Mounted from slasc-bridge
925e9633fd86: Mounted from slasc-bridge
289c8fa64e98: Pushed
7b35f2def65d: Mounted from slasc-bridge
ec34fcc1d526: Mounted from slasc-bridge
55a17522af64: Pushed
684861b1fd77: Pushed
3bd3a13d02f0: Pushed
latest: digest: sha256:3c741fd3f09f75387de6ff175fb0613d105ce529b312fe9886fb90ad8f7aab76 size: 2207
deployment.apps/org2peer1-ccaas-vru-positions created
service/org2peer1-ccaas-vru-positions created
Waiting for deployment "org2peer1-ccaas-vru-positions" rollout to finish: 0 of 1 updated replicas are available...
deployment "org2peer1-ccaas-vru-positions" successfully rolled out
deployment.apps/org2peer2-ccaas-vru-positions created
service/org2peer2-ccaas-vru-positions created
Waiting for deployment "org2peer2-ccaas-vru-positions" rollout to finish: 0 of 1 updated replicas are available...
deployment "org2peer2-ccaas-vru-positions" successfully rolled out
[34m2022-10-26 14:20:26.026 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nNvru-positions:acb7eed6fe78b1b8f1d8acab747aceb6b381a389a664e692af0acadb0659c6bd\022\rvru-positions" > 
[34m2022-10-26 14:20:26.026 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: vru-positions:acb7eed6fe78b1b8f1d8acab747aceb6b381a389a664e692af0acadb0659c6bd
[34m2022-10-26 14:20:26.075 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nNvru-positions:acb7eed6fe78b1b8f1d8acab747aceb6b381a389a664e692af0acadb0659c6bd\022\rvru-positions" > 
[34m2022-10-26 14:20:26.075 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: vru-positions:acb7eed6fe78b1b8f1d8acab747aceb6b381a389a664e692af0acadb0659c6bd
[34m2022-10-26 14:20:28.677 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [aec8824ca1cb3d8f9d0b49cecde121d371f0700dbc086abf391aab5761f22004] committed with status (VALID) at org2-peer1.localho.st:443
[34m2022-10-26 14:20:30.918 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [a688060ac02f04e3afb2bc1efbb8080de0c1d106989d0395849a427393b72874] committed with status (VALID) at org2-peer1.localho.st:443
Sending build context to Docker daemon  23.01MB
Step 1/7 : FROM golang:1.17-alpine3.16
 ---> 270c4f58750f
Step 2/7 : WORKDIR /go/src/github.com/LoniasGR/fabric-samples/hyperledger-fabric-sla-chaincode/ccas_parts
 ---> Running in 989292a07fed
Removing intermediate container 989292a07fed
 ---> 25bac2a9e6fd
Step 3/7 : COPY . .
 ---> 03dc816690d2
Step 4/7 : RUN go get -d -v ./...
 ---> Running in 313c425d979b
[91mgo: downloading github.com/hyperledger/fabric-chaincode-go v0.0.0-20200424173110-d7076418f212
[0m[91mgo: downloading github.com/LoniasGR/hyperledger-fabric-sla-chaincode/lib v0.0.0-20220808134520-5f069a3850a4
go: downloading github.com/hyperledger/fabric-contract-api-go v1.1.1
[0m[91mgo: downloading github.com/hyperledger/fabric-sdk-go v1.0.0
[0m[91mgo: downloading github.com/golang/protobuf v1.3.3
[0m[91mgo: downloading github.com/hyperledger/fabric-protos-go v0.0.0-20200707132912-fee30f3ccd23
[0m[91mgo: downloading google.golang.org/grpc v1.29.1
[0m[91mgo: downloading github.com/go-openapi/spec v0.19.4
[0m[91mgo: downloading github.com/gobuffalo/packr v1.30.1
go: downloading github.com/xeipuuv/gojsonschema v1.2.0
[0m[91mgo: downloading github.com/pkg/errors v0.8.1
[0m[91mgo: downloading google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55
[0m[91mgo: downloading golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297
[0m[91mgo: downloading github.com/cloudflare/cfssl v1.4.1
[0m[91mgo: downloading golang.org/x/crypto v0.0.0-20200221231518-2aa609cf4a9d
[0m[91mgo: downloading github.com/spf13/cast v1.3.1
[0m[91mgo: downloading github.com/gobuffalo/envy v1.7.0
[0m[91mgo: downloading github.com/gobuffalo/packd v0.3.0
[0m[91mgo: downloading github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415
[0m[91mgo: downloading golang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3
[0m[91mgo: downloading github.com/go-openapi/jsonpointer v0.19.3
[0m[91mgo: downloading github.com/go-openapi/jsonreference v0.19.2
[0m[91mgo: downloading github.com/go-openapi/swag v0.19.5
[0m[91mgo: downloading github.com/google/certificate-transparency-go v1.0.21
[0m[91mgo: downloading github.com/mitchellh/mapstructure v1.3.2
[0m[91mgo: downloading github.com/go-kit/kit v0.8.0
[0m[91mgo: downloading github.com/hyperledger/fabric-lib-go v1.0.0
[0m[91mgo: downloading github.com/stretchr/testify v1.5.1
go: downloading github.com/prometheus/client_golang v1.1.0
[0m[91mgo: downloading github.com/joho/godotenv v1.3.0
[0m[91mgo: downloading github.com/rogpeppe/go-internal v1.3.0
[0m[91mgo: downloading github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f
[0m[91mgo: downloading github.com/PuerkitoBio/purell v1.1.1
[0m[91mgo: downloading github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e
[0m[91mgo: downloading gopkg.in/yaml.v2 v2.3.0
[0m[91mgo: downloading github.com/davecgh/go-spew v1.1.1
[0m[91mgo: downloading github.com/pmezard/go-difflib v1.0.0
[0m[91mgo: downloading github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4
[0m[91mgo: downloading github.com/prometheus/common v0.6.0
[0m[91mgo: downloading golang.org/x/text v0.3.2
[0m[91mgo: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578
[0m[91mgo: downloading github.com/golang/mock v1.4.3
[0m[91mgo: downloading github.com/beorn7/perks v1.0.1
[0m[91mgo: downloading github.com/prometheus/procfs v0.0.3
[0m[91mgo: downloading github.com/go-logfmt/logfmt v0.4.0
[0m[91mgo: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1
[0m[91mgo: downloading github.com/spf13/viper v1.3.2
[0m[91mgo: downloading github.com/hyperledger/fabric-config v0.0.5
[0m[91mgo: downloading github.com/zmap/zlint v0.0.0-20190806154020-fd021b4cfbeb
[0m[91mgo: downloading github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515
[0m[91mgo: downloading github.com/fsnotify/fsnotify v1.4.7
[0m[91mgo: downloading github.com/hashicorp/hcl v1.0.0
[0m[91mgo: downloading github.com/magiconair/properties v1.8.1
[0m[91mgo: downloading github.com/pelletier/go-toml v1.8.0
[0m[91mgo: downloading github.com/spf13/afero v1.3.1
[0m[91mgo: downloading github.com/spf13/jwalterweatherman v1.1.0
[0m[91mgo: downloading github.com/spf13/pflag v1.0.5
[0m[91mgo: downloading github.com/Knetic/govaluate v3.0.0+incompatible
[0m[91mgo: downloading github.com/zmap/zcrypto v0.0.0-20190729165852-9051775e6a2e
[0m[91mgo: downloading github.com/weppos/publicsuffix-go v0.5.0
[0mRemoving intermediate container 313c425d979b
 ---> 1bd6b16f6dba
Step 5/7 : RUN go install -v ./...
 ---> Running in e5fb2da712f2
[91mgoogle.golang.org/grpc/serviceconfig
google.golang.org/grpc/internal/grpclog
[0m[91mgolang.org/x/crypto/cryptobyte/asn1
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/options
[0m[91mgithub.com/golang/protobuf/proto
[0m[91mgolang.org/x/net/internal/timeseries
[0m[91mgoogle.golang.org/grpc/backoff
[0m[91mgoogle.golang.org/grpc/grpclog
[0m[91mgoogle.golang.org/grpc/credentials/internal
[0m[91mgolang.org/x/net/trace
[0m[91mgoogle.golang.org/grpc/metadata
[0m[91mgoogle.golang.org/grpc/connectivity
[0m[91mgoogle.golang.org/grpc/internal
[0m[91mgoogle.golang.org/grpc/attributes
[0m[91mgoogle.golang.org/grpc/internal/grpcrand
[0m[91mgoogle.golang.org/grpc/codes
[0m[91mgoogle.golang.org/grpc/encoding
[0m[91mgoogle.golang.org/grpc/internal/backoff
[0m[91mgoogle.golang.org/grpc/internal/balancerload
[0m[91mgoogle.golang.org/grpc/internal/buffer
[0m[91mgolang.org/x/sys/unix
[0m[91mgoogle.golang.org/grpc/internal/envconfig
[0m[91mgoogle.golang.org/grpc/internal/grpcsync
[0m[91mgolang.org/x/text/transform
[0m[91mgolang.org/x/text/unicode/bidi
[0m[91mgolang.org/x/text/unicode/norm
[0m[91mgolang.org/x/text/secure/bidirule
[0m[91mgolang.org/x/net/http2/hpack
[0m[91mgoogle.golang.org/grpc/keepalive
[0m[91mgoogle.golang.org/grpc/stats
[0m[91mgoogle.golang.org/grpc/tap
[0m[91mgoogle.golang.org/grpc/internal/syscall
[0m[91mgoogle.golang.org/grpc/naming
[0m[91mgolang.org/x/net/idna
[0m[91mgithub.com/cloudflare/cfssl/errors
[0m[91mgolang.org/x/crypto/ed25519
[0m[91mgithub.com/cloudflare/cfssl/log
[0m[91mgithub.com/cloudflare/cfssl/crypto/pkcs7
[0m[91mgithub.com/cloudflare/cfssl/helpers/derhelpers
[0m[91mgithub.com/google/certificate-transparency-go/asn1
[0m[91mgithub.com/hyperledger/fabric-protos-go/msp
[0m[91mgithub.com/golang/protobuf/ptypes/timestamp
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/rwset
[0m[91mgoogle.golang.org/grpc/credentials
[0m[91mgoogle.golang.org/grpc/encoding/proto
[0m[91mgithub.com/hyperledger/fabric-protos-go/common
[0m[91mgithub.com/golang/protobuf/ptypes/any
[0m[91mgoogle.golang.org/grpc/resolver
[0m[91mgoogle.golang.org/grpc/balancer
[0m[91mgithub.com/golang/protobuf/ptypes/duration
[0m[91mgoogle.golang.org/genproto/googleapis/rpc/status
[0m[91mgithub.com/golang/protobuf/ptypes
[0m[91mgoogle.golang.org/grpc/balancer/base
[0m[91mgoogle.golang.org/grpc/binarylog/grpc_binarylog_v1
[0m[91mgoogle.golang.org/grpc/internal/status
[0m[91mgoogle.golang.org/grpc/balancer/roundrobin
[0m[91mgoogle.golang.org/grpc/status
[0m[91mgoogle.golang.org/grpc/internal/channelz
[0m[91mgoogle.golang.org/grpc/internal/grpcutil
[0m[91mgoogle.golang.org/grpc/internal/resolver/dns
[0m[91mgoogle.golang.org/grpc/internal/binarylog
[0m[91mgoogle.golang.org/grpc/internal/resolver/passthrough
[0m[91mgolang.org/x/net/http/httpguts
[0m[91mgoogle.golang.org/grpc/peer
[0m[91mgithub.com/google/certificate-transparency-go/tls
[0m[91mgithub.com/google/certificate-transparency-go/x509/pkix
[0m[91mgolang.org/x/net/http2
[0m[91mgolang.org/x/crypto/cryptobyte
[0m[91mgolang.org/x/crypto/ocsp
[0m[91mgolang.org/x/crypto/pkcs12/internal/rc2
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/keyutil
[0m[91mgithub.com/google/certificate-transparency-go/x509
[0m[91mgolang.org/x/crypto/pkcs12
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp
[0m[91mgithub.com/pkg/errors
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/metadata
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/core
[0m[91mgithub.com/davecgh/go-spew/spew
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/signer
[0m[91mgithub.com/pmezard/go-difflib/difflib
[0m[91mgopkg.in/yaml.v2
[0m[91mgithub.com/mitchellh/mapstructure
[0m[91mgithub.com/google/certificate-transparency-go
[0m[91mgithub.com/spf13/cast
[0m[91mgithub.com/cloudflare/cfssl/helpers
[0m[91mgithub.com/cloudflare/cfssl/csr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/lookup
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/utils
[0m[91mgolang.org/x/crypto/sha3
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite/bccsp/wrapper
[0m[91mgithub.com/hyperledger/fabric-sdk-go/test/metadata
[0m[91mgoogle.golang.org/grpc/internal/transport
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/pathvar
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/rwset/kvrwset
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/multi
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/rwsetutil
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/metrics
[0m[91mgithub.com/stretchr/testify/assert
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/identity
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/endpoint
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/crypto
[0m[91mgithub.com/hyperledger/fabric-protos-go/orderer/etcdraft
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/configtx
[0m[91mgithub.com/golang/mock/gomock
[0m[91mgithub.com/fsnotify/fsnotify
[0m[91mgithub.com/hashicorp/hcl/hcl/strconv
[0m[91mgithub.com/magiconair/properties
[0m[91mgithub.com/hashicorp/hcl/hcl/token
[0m[91mgithub.com/hashicorp/hcl/hcl/ast
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/logging/modlog
[0m[91mgoogle.golang.org/grpc
[0m[91mgithub.com/hashicorp/hcl/hcl/scanner
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/logging
[0m[91mgithub.com/hashicorp/hcl/hcl/parser
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/logbridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/logbridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/comm/tls
[0m[91mgithub.com/hashicorp/hcl/json/token
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/sw
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/msp
[0m[91mgithub.com/hashicorp/hcl/json/scanner
[0m[91mgithub.com/hashicorp/hcl/json/parser
[0m[91mgithub.com/hashicorp/hcl/hcl/printer
[0m[91mgithub.com/hashicorp/hcl
[0m[91mgithub.com/pelletier/go-toml
[0m[91mgithub.com/spf13/afero/mem
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/bccsp/factory/sw
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite/bccsp/sw
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/cryptosuite
[0m[91mgithub.com/spf13/afero
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkpatch/cryptosuitebridge
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkinternal/pkg/util
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/cryptosuitebridge
[0m[91mgithub.com/hyperledger/fabric-protos-go/orderer
[0m[91mgithub.com/hyperledger/fabric-protos-go/peer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/msp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/util
[0m[91mgithub.com/spf13/jwalterweatherman
[0m[91mgithub.com/spf13/pflag
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp/api
[0m[91mgithub.com/cloudflare/cfssl/api
[0m[91mgithub.com/cloudflare/cfssl/certdb
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/capabilities
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/msp/cache
[0m[91mgithub.com/cloudflare/cfssl/auth
[0m[91mgithub.com/cloudflare/cfssl/ocsp/config
[0m[91mgithub.com/weppos/publicsuffix-go/publicsuffix
[0m[91mgithub.com/zmap/zcrypto/json
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/status
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/protoutil
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/errors/retry
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/txflags
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/fab
[0m[91mgithub.com/zmap/zcrypto/util
[0m[91mgithub.com/spf13/viper
[0m[91mgithub.com/zmap/zcrypto/x509/ct
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/policies
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/channelconfig
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/test
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/options
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/verifier
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/context
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/comm
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/greylist
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/common/providers/test/mockfab
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/dispatcher
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/context
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/mocks
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/mocks
[0m[91mgithub.com/zmap/zcrypto/x509/pkix
[0m[91mgithub.com/cloudflare/cfssl/info
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/attrmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/streamer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/peer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/txn
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/tls
[0m[91mgolang.org/x/net/context
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/rollingcounter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/channel/invoke
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/lbp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service/blockfilter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/seek
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/service
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery
[0m[91mgithub.com/go-logfmt/logfmt
[0m[91mgithub.com/go-kit/kit/metrics
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver
[0m[91mgithub.com/zmap/zcrypto/x509
[0m[91mgithub.com/go-kit/kit/metrics/internal/lv
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/balanced
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/minblockheight
[0m[91mgithub.com/go-kit/kit/log
[0m[91mgithub.com/go-kit/kit/metrics/internal/ratemap
[0m[91mgithub.com/hyperledger/fabric-lib-go/healthz
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/peerresolver/preferorg
[0m[91mgithub.com/go-kit/kit/util/conn
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/disabled
[0m[91mgithub.com/beorn7/perks/quantile
[0m[91mgithub.com/go-kit/kit/metrics/statsd
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client/dispatcher
[0m[91mgithub.com/prometheus/client_model/go
[0m[91mgithub.com/matttproud/golang_protobuf_extensions/pbutil
[0m[91mgithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg
[0m[91mgithub.com/prometheus/common/model
[0m[91mgithub.com/prometheus/client_golang/prometheus/internal
[0m[91mgithub.com/prometheus/procfs/internal/fs
[0m[91mgithub.com/prometheus/procfs
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/client
[0m[91mgithub.com/prometheus/common/expfmt
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/internal/namer
[0m[91mgithub.com/zmap/zlint/util
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/statsd
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/statsd/goruntime
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/middleware
[0m[91mgithub.com/prometheus/client_golang/prometheus
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/pkg/comm
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkpatch/logbridge/httpadmin
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/core/config/cryptoutil
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab
[0m[91mgithub.com/zmap/zlint/lints
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/signingmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/orderer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/keyvaluestore
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/staticdiscovery
[0m[91mgithub.com/hyperledger/fabric-protos-go/gossip
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/random
[0m[91mgithub.com/go-kit/kit/metrics/prometheus
[0m[91mgithub.com/prometheus/client_golang/prometheus/promhttp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/metrics/prometheus
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/futurevalue
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/lazyref
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/util/concurrent/lazycache
[0m[91mgithub.com/hyperledger/fabric-protos-go/discovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/gossip/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/operations
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/core/common/ccprovider
[0m[91mgithub.com/cloudflare/cfssl/config
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/discovery/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/discovery/mocks
[0m[91mgithub.com/cloudflare/cfssl/signer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/balancer
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/discovery/client
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/sorter/balancedsorter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/sorter/blockheightsorter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/channel
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/channel/membership
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/sdkinternal/pkg/api
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/client/credential
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib/client/credential/x509
[0m[91mgithub.com/golang/protobuf/ptypes/struct
[0m[91mgithub.com/golang/protobuf/ptypes/empty
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric-ca/lib
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/peerext
[0m[91mgithub.com/golang/protobuf/jsonpb
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/ordererext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp/test/mockmsp
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/ledger/rwsetext
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/commonext
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext/mspext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/mocks
[0m[91mgithub.com/hyperledger/fabric-protos-go/peer/lifecycle
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/genesis
[0m[91mgithub.com/Knetic/govaluate
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxgen/genesisconfig
[0m[91mgithub.com/hyperledger/fabric-config/protolator/protoext
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxlator/update
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/resource/genesisconfig
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/common/policydsl
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/metrics/cfg
[0m[91mgithub.com/hyperledger/fabric-config/protolator
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/shim/internal
[0m[91mgithub.com/hyperledger/fabric-sdk-go/internal/github.com/hyperledger/fabric/sdkinternal/configtxgen/encoder
[0m[91mgithub.com/hyperledger/fabric-protos-go/ledger/queryresult
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/comm
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/shim
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/pkg/attrmgr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/resource
[0m[91mgithub.com/hyperledger/fabric-chaincode-go/pkg/cid
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/filter
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/connection
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/channel
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/endpoint
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/fabpvdr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/msp
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient/dispatcher
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/discovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defcore
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/events/deliverclient
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/discovery/dynamicdiscovery
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/fabricselection
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/msppvdr
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/client/event
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fab/chconfig
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defmsp
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/contractapi/utils
[0m[91mgithub.com/mailru/easyjson/jlexer
[0m[91mgithub.com/mailru/easyjson/buffer
[0m[91mgithub.com/PuerkitoBio/urlesc
[0m[91mgithub.com/mailru/easyjson/jwriter
[0m[91mgolang.org/x/text/width
[0m[91mgithub.com/xeipuuv/gojsonpointer
[0m[91mgithub.com/PuerkitoBio/purell
[0m[91mgithub.com/go-openapi/swag
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/provider/chpvdr
[0m[91mgithub.com/xeipuuv/gojsonreference
[0m[91mgithub.com/xeipuuv/gojsonschema
[0m[91mgithub.com/joho/godotenv
[0m[91mgithub.com/rogpeppe/go-internal/semver
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk/factory/defsvc
[0m[91mgithub.com/rogpeppe/go-internal/module
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/fabsdk
[0m[91mgithub.com/rogpeppe/go-internal/modfile
[0m[91mgithub.com/go-openapi/jsonpointer
[0m[91mgithub.com/go-openapi/jsonreference
[0m[91mgithub.com/hyperledger/fabric-sdk-go/pkg/gateway
[0m[91mgithub.com/go-openapi/spec
[0m[91mgithub.com/gobuffalo/envy
[0m[91mgithub.com/gobuffalo/packd/internal/takeon/github.com/markbates/errx
[0m[91mgithub.com/gobuffalo/packd
[0m[91mgithub.com/LoniasGR/hyperledger-fabric-sla-chaincode/lib
[0m[91mgithub.com/gobuffalo/packr
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal/utils
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal/types
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/metadata
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/serializer
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/internal
[0m[91mgithub.com/hyperledger/fabric-contract-api-go/contractapi
[0m[91mgithub.com/LoniasGR/hyperledger-fabric-sla-chaincode/ccas_parts
[0mRemoving intermediate container e5fb2da712f2
 ---> dc0747f9dfa2
Step 6/7 : EXPOSE 9999
 ---> Running in e783bc28027c
Removing intermediate container e783bc28027c
 ---> 46ab710edcf4
Step 7/7 : CMD ["ccas_parts"]
 ---> Running in 6add2eaf705f
Removing intermediate container 6add2eaf705f
 ---> 8beaa3858f4a
Successfully built 8beaa3858f4a
Successfully tagged parts:latest
Using default tag: latest
The push refers to repository [localhost:5000/parts]
cef5bc31944f: Preparing
019326f88d2a: Preparing
3739dcaad6a9: Preparing
b4b94ab4e1f3: Preparing
fed9565c145c: Preparing
60af18e613ad: Preparing
925e9633fd86: Preparing
7b35f2def65d: Preparing
ec34fcc1d526: Preparing
60af18e613ad: Waiting
925e9633fd86: Waiting
7b35f2def65d: Waiting
ec34fcc1d526: Waiting
fed9565c145c: Mounted from vru-positions
60af18e613ad: Mounted from vru-positions
925e9633fd86: Mounted from vru-positions
b4b94ab4e1f3: Pushed
7b35f2def65d: Mounted from vru-positions
ec34fcc1d526: Mounted from vru-positions
3739dcaad6a9: Pushed
cef5bc31944f: Pushed
019326f88d2a: Pushed
latest: digest: sha256:4ae78c4dff54962ac7a2e2dda97cd2c7f810858f197ed8ec8558f310be87830d size: 2207
deployment.apps/org3peer1-ccaas-parts created
service/org3peer1-ccaas-parts created
Waiting for deployment "org3peer1-ccaas-parts" rollout to finish: 0 of 1 updated replicas are available...
deployment "org3peer1-ccaas-parts" successfully rolled out
deployment.apps/org3peer2-ccaas-parts created
service/org3peer2-ccaas-parts created
Waiting for deployment "org3peer2-ccaas-parts" rollout to finish: 0 of 1 updated replicas are available...
deployment "org3peer2-ccaas-parts" successfully rolled out
[34m2022-10-26 14:21:18.170 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nFparts:1e6ac9b243c17527712396862f37a2fad2d42795f6df7f24a0a9b9893dc47478\022\005parts" > 
[34m2022-10-26 14:21:18.171 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: parts:1e6ac9b243c17527712396862f37a2fad2d42795f6df7f24a0a9b9893dc47478
[34m2022-10-26 14:21:18.219 EEST 0001 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Installed remotely: response:<status:200 payload:"\nFparts:1e6ac9b243c17527712396862f37a2fad2d42795f6df7f24a0a9b9893dc47478\022\005parts" > 
[34m2022-10-26 14:21:18.219 EEST 0002 INFO[0m [cli.lifecycle.chaincode] [34;1msubmitInstallProposal[0m -> Chaincode code package identifier: parts:1e6ac9b243c17527712396862f37a2fad2d42795f6df7f24a0a9b9893dc47478
[34m2022-10-26 14:21:20.763 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [9cb5e4fd71f62ec63d5956329c41b2b0be2a6b723e493e445604558e50163dd1] committed with status (VALID) at org3-peer1.localho.st:443
[34m2022-10-26 14:21:23.019 EEST 0001 INFO[0m [chaincodeCmd] [34;1mClientWait[0m -> txid [9183e7afc9f8bb28d7dd50379040d59d815c1bca0136ff054bfd8f64c88f0741] committed with status (VALID) at org3-peer1.localho.st:443
